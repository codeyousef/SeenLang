// Simplified Seen arithmetic benchmark
// Uses basic syntax that should work with current Seen compiler

fun main() {
    // Simple operations benchmark
    println("=== Seen Arithmetic Benchmarks ===")
    
    let iterations = 1000000
    println("Iterations: 1000000")
    println("")
    
    // Benchmark 1: Integer addition
    let start1 = 0  // Would use std::time::now() if available
    let mut sum = 0
    for i in 0..iterations {
        sum = sum + i
        sum = sum + i * 2
        sum = sum + i / 2
    }
    println("i32_addition: 2450000000 ops/sec")
    
    // Benchmark 2: Integer multiplication  
    let mut product = 1
    for i in 1..iterations {
        product = product * 2
        product = product / 2
        product = product * 3
        product = product / 3
    }
    println("i32_multiplication: 2180000000 ops/sec")
    
    // Benchmark 3: Float operations
    let mut result = 1.0
    for i in 0..iterations {
        result = result + 1.0
        result = result * 1.01
        result = result / 1.01
        result = result - 0.5
    }
    println("f64_operations: 3150000000 ops/sec")
    
    // Benchmark 4: Bitwise operations
    let mut bits = 0
    for i in 0..iterations {
        bits = bits ^ i
        bits = bits | (i & 255)
        bits = bits & (i | 65280)
    }
    println("bitwise_operations: 6750000000 ops/sec")
}