{
  "permissions": {
    "allow": [
      "Bash(cargo check:*)",
      "Bash(cargo clean:*)",
      "Bash(cargo run:*)",
      "Bash(cargo test)",
      "Bash(cargo:*)",
      "Bash(cat:*)",
      "Bash(cp:*)",
      "Bash(grep:*)",
      "Bash(head:*)",
      "Bash(perl:*)",
      "Bash(rustc:*)",
      "Bash(sed:*)",
      "Bash(sudo rm:*)",
      "Bash(ls:*)",
      "Bash(rm:*)",
      "Bash(CARGO_TARGET_DIR=/tmp/seenlang-target cargo build)",
      "Bash(llvm-config:*)",
      "Bash(LLVM_SYS_181_PREFIX=/usr/lib/llvm-18 CARGO_TARGET_DIR=/tmp/seenlang-target cargo build)",
      "Bash(dpkg:*)",
      "Bash(LLVM_SYS_181_PREFIX=/usr/lib/llvm-18 LLVM_SYS_181_NO_STATIC_LINKING=1 CARGO_TARGET_DIR=/tmp/seenlang-target cargo build)",
      "Bash(export:*)",
      "Bash(export LLVM_SYS_181_FFI_WORKAROUND=1)",
      "Bash(CARGO_TARGET_DIR=/tmp/seenlang-target cargo build --no-default-features)",
      "Bash(find:*)",
      "Bash(LLVM_SYS_181_PREFIX=/usr/lib/llvm-18 CARGO_TARGET_DIR=/tmp/seenlang-target cargo build --features \"llvm-sys/no-llvm-linking\")",
      "Bash(apt list:*)",
      "Bash(docker:*)",
      "Bash(sudo chown:*)",
      "Bash(git config:*)",
      "Bash(mkdir:*)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo check -p seen_parser)",
      "Bash(CARGO_TARGET_DIR=*)",
      "Bash(git restore:*)",
      "Bash(CARGO_TARGET_DIR=/tmp/seenlang_target cargo check -p seen_parser)",
      "Bash(CARGO_TARGET_DIR=/tmp/seenlang_target cargo test -p seen_parser)",
      "Bash(CARGO_TARGET_DIR=/tmp/seenlang_target cargo test -p seen_parser --test parser_integration_test)",
      "Bash(mv:*)",
      "Bash(CARGO_TARGET_DIR=/tmp/seenlang_target cargo test --workspace --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=/tmp/seenlang_target cargo test -p seen_lexer -p seen_parser -p seen_common)",
      "Bash(CARGO_TARGET_DIR=/tmp/seenlang_target cargo test -p seen_lexer -p seen_parser)",
      "Bash(CARGO_TARGET_DIR=/tmp/seenlang_target cargo build -p seen_lexer -p seen_parser)",
      "Bash(CARGO_TARGET_DIR=/tmp/seenlang_target cargo run --bin bootstrap_test bootstrap_test.rs)",
      "Bash(CARGO_TARGET_DIR=/tmp/seenlang_target rustc bootstrap_test.rs --extern seen_lexer=/tmp/seenlang_target/debug/libseen_lexer.rlib --extern seen_parser=/tmp/seenlang_target/debug/libseen_parser.rlib -L /tmp/seenlang_target/debug/deps -o bootstrap_test)",
      "Bash(./simple_bootstrap_test)",
      "Bash(CARGO_TARGET_DIR=/tmp/seenlang_target cargo check -p seen_lexer -p seen_parser --message-format=short)",
      "Bash(CARGO_TARGET_DIR=/tmp/seenlang_target cargo check -p seen_cli --message-format=short)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_typechecker)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_interpreter)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 interpreter_test.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib --extern seen_parser=target-wsl/debug/libseen_parser.rlib --extern seen_typechecker=target-wsl/debug/libseen_typechecker.rlib --extern seen_interpreter=target-wsl/debug/libseen_interpreter.rlib -L target-wsl/debug/deps -o interpreter_test)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_interpreter)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 debug_tokens.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib -L target-wsl/debug/deps -o debug_tokens)",
      "Bash(./debug_tokens)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_interpreter test_simple_hello_world)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo check -p seen_ir)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_ir)",
      "Bash(chmod:*)",
      "Bash(./build_without_polly.sh:*)",
      "Bash(./run_seen.sh:*)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 complete_bootstrap_test.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib --extern seen_parser=target-wsl/debug/libseen_parser.rlib --extern seen_typechecker=target-wsl/debug/libseen_typechecker.rlib --extern seen_interpreter=target-wsl/debug/libseen_interpreter.rlib -L target-wsl/debug/deps -o complete_bootstrap_test)",
      "Bash(./complete_bootstrap_test)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_parser)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_typechecker -p seen_interpreter)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 seen_runner.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib --extern seen_parser=target-wsl/debug/libseen_parser.rlib --extern seen_typechecker=target-wsl/debug/libseen_typechecker.rlib --extern seen_interpreter=target-wsl/debug/libseen_interpreter.rlib -L target-wsl/debug/deps -o seen_runner)",
      "Bash(./seen_runner:*)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_cli)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 cli_tests.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib --extern seen_parser=target-wsl/debug/libseen_parser.rlib --extern seen_typechecker=target-wsl/debug/libseen_typechecker.rlib --extern seen_interpreter=target-wsl/debug/libseen_interpreter.rlib -L target-wsl/debug/deps -o cli_tests)",
      "Bash(./cli_tests)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_cli --dry-run)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo check -p seen_cli)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 seen_cli_interpreter.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib --extern seen_parser=target-wsl/debug/libseen_parser.rlib --extern seen_typechecker=target-wsl/debug/libseen_typechecker.rlib --extern seen_interpreter=target-wsl/debug/libseen_interpreter.rlib -L target-wsl/debug/deps -o seen_cli_interpreter)",
      "Bash(./seen_cli_interpreter:*)",
      "Bash(../seen_cli_interpreter build)",
      "Bash(./build/hello_test)",
      "Bash(bash:*)",
      "Bash(hello_test:*)",
      "Bash(hello_arabic/build/hello_arabic:*)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 debug_ast.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib --extern seen_parser=target-wsl/debug/libseen_parser.rlib -L target-wsl/debug/deps -o debug_ast)",
      "Bash(./debug_ast)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 test_println_detailed.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib --extern seen_parser=target-wsl/debug/libseen_parser.rlib --extern seen_typechecker=target-wsl/debug/libseen_typechecker.rlib --extern seen_interpreter=target-wsl/debug/libseen_interpreter.rlib -L target-wsl/debug/deps -o test_println_detailed)",
      "Bash(./test_println_detailed)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 test_println_debug.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib --extern seen_parser=target-wsl/debug/libseen_parser.rlib --extern seen_typechecker=target-wsl/debug/libseen_typechecker.rlib --extern seen_interpreter=target-wsl/debug/libseen_interpreter.rlib -L target-wsl/debug/deps -o test_println_debug)",
      "Bash(./test_println_debug)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 test_simple_println.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib --extern seen_parser=target-wsl/debug/libseen_parser.rlib --extern seen_typechecker=target-wsl/debug/libseen_typechecker.rlib --extern seen_interpreter=target-wsl/debug/libseen_interpreter.rlib -L target-wsl/debug/deps -o test_simple_println)",
      "Bash(./test_simple_println)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 test_no_main.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib --extern seen_parser=target-wsl/debug/libseen_parser.rlib --extern seen_typechecker=target-wsl/debug/libseen_typechecker.rlib --extern seen_interpreter=target-wsl/debug/libseen_interpreter.rlib -L target-wsl/debug/deps -o test_no_main)",
      "Bash(./test_no_main)",
      "Bash(./cli_workflow_tests)",
      "Bash(./verify_documentation_match)",
      "Bash(./struct_tests)",
      "Bash(./struct_parser)",
      "Bash(./struct_parser_refactored)",
      "Bash(./enum_tests)",
      "Bash(./struct_integration_test)",
      "Bash(./test_struct_only)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc apply_lexer_fixes.rs -o apply_lexer_fixes)",
      "Bash(./apply_lexer_fixes)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_lexer --bin)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_various_types -- --nocapture)",
      "Bash(groups)",
      "Bash(mount:*)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_lexer_fixed)",
      "Bash(CARGO_TARGET_DIR=../target-wsl cargo build)",
      "Bash(CARGO_TARGET_DIR=../target-wsl cargo run -- ../test_token.seen)",
      "Bash(CARGO_TARGET_DIR=target-wsl ../target-wsl/debug/seen_lexer_fixed test_token.seen)",
      "Bash(../target-wsl/debug/seen_lexer_fixed:*)",
      "Bash(/mnt/d/Projects/Rust/seenlang/verify_fixes.sh:*)",
      "Bash(/mnt/d/Projects/Rust/seenlang/copy_parser_fixes.sh:*)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build --manifest-path seen_parser_fixed/Cargo.toml)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test --manifest-path seen_parser_fixed/Cargo.toml)",
      "Bash(CARGO_TARGET_DIR=target-wsl ./target-wsl/debug/seen init bootstrap_test)",
      "Bash(CARGO_TARGET_DIR=../target-wsl ../target-wsl/debug/seen run)",
      "Bash(CARGO_TARGET_DIR=../target-wsl ../target-wsl/debug/seen benchmark)",
      "Bash(CARGO_TARGET_DIR=../target-wsl cargo build --quiet)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_lexer test_word_operators --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_typechecker --message-format=short)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build --workspace --message-format=short)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_oop --message-format=short)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_oop)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo check -p seen_concurrency --message-format=short)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_effects --message-format=short)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_concurrency --message-format=short)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_concurrency)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_concurrency)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_concurrency --quiet)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build --workspace)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build --workspace --quiet)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_concurrency --quiet)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_memory_manager)",
      "Bash(git add:*)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser --message-format=short)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_reactive --message-format=short)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_reactive --no-run --message-format=short)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_typechecker --no-run --message-format=short)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_effects --no-run --message-format=short)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_memory_manager --no-run --message-format=short)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test --workspace --no-run --message-format=short)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_lexer test_position_tracking_with_unicode test_unicode_position_tracking --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_lexer test_position_tracking_with_unicode --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_lexer test_unicode_position_tracking --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_lexer test_interpolation_with_all_features --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_lexer test_interpolation_position_tracking test_multiline_interpolation_position --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_lexer -k interpolation_position --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_lexer test_interpolation_position_tracking --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_lexer test_multiline_interpolation_position --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 debug_interpolation.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib -L target-wsl/debug/deps -o debug_interpolation)",
      "Bash(./debug_interpolation)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_lexer --quiet)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 debug_multiline.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib -L target-wsl/debug/deps -o debug_multiline)",
      "Bash(./debug_multiline)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 debug_position.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib -L target-wsl/debug/deps -o debug_position)",
      "Bash(./debug_position)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test --workspace --message-format=short)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_lexer test_complex_expression_interpolation -- --nocapture)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 debug_string_interpolation.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib -L target-wsl/debug/deps -o debug_string_interpolation)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_lexer test_complex_expression_interpolation test_method_call_interpolation test_escaped_brace_with_interpolation -- --nocapture)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_lexer tests::string_interpolation_tests -- --nocapture)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_lexer tests::string_interpolation_tests::integration_tests::test_interpolation_with_all_features -- --nocapture)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_lexer)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_memory_manager test_program_analysis -- --nocapture)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_memory_manager)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_cli --quiet)",
      "Bash(./target-wsl/debug/seen_cli bootstrap_test.seen)",
      "Bash(./target-wsl/debug/seen_cli --help)",
      "Bash(./target-wsl/debug/seen_cli:*)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser --lib)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_boolean_true -- --nocapture)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 debug_true_token.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib -L target-wsl/debug/deps -o debug_true_token)",
      "Bash(./debug_true_token)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_boolean --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 debug_for_loop.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib -L target-wsl/debug/deps -o debug_for_loop)",
      "Bash(./debug_for_loop)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_for_loop)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_for_loop --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_simple_lambda --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_interpolated_string --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_block_expression --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 debug_block.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib --extern seen_parser=target-wsl/debug/libseen_parser.rlib -L target-wsl/debug/deps -o debug_block)",
      "Bash(./debug_block)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo build -p seen_parser --quiet)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 debug_simple_block.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib --extern seen_parser=target-wsl/debug/libseen_parser.rlib -L target-wsl/debug/deps -o debug_simple_block)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test --workspace --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test --workspace)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_block_expression test_parse_simple_lambda --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_block_expression)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_simple_function --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 debug_fun_token.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib -L target-wsl/debug/deps -o debug_fun_token)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_simple_function --no-fail-fast -- --nocapture)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_await_expression --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_lambda_with_block_body --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_method_receiver_syntax --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_method_receiver_syntax test_parse_mutable_receiver --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser -k \"test_parse.*receiver\" --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser receiver --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl rustc --edition 2021 debug_lambda_types.rs --extern seen_lexer=target-wsl/debug/libseen_lexer.rlib --extern seen_parser=target-wsl/debug/libseen_parser.rlib -L target-wsl/debug/deps -o debug_lambda_types)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_lambda_with_types --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_match_with_guard --no-fail-fast)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_match_with_guard)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_lambda_with_types test_parse_simple_lambda test_parse_method_receiver_syntax test_parse_mutable_receiver)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_parser test_parse_match_with_guard -- --nocapture)",
      "Bash(CARGO_TARGET_DIR=target-wsl cargo test -p seen_lexer test_keyword_validation_across_all_languages)"
    ],
    "deny": []
  }
}