name: Test

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    types: [opened, synchronize, reopened]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10

jobs:
  # Quick tests for faster feedback
  quick-test:
    name: Quick Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install LLVM
        run: |
          sudo apt-get update
          sudo apt-get install -y llvm-14 llvm-14-dev libclang-14-dev
      - name: Run unit tests
        run: cargo test --lib --all
      - name: Run doc tests
        run: cargo test --doc --all

  # Full test matrix
  full-test:
    name: Full Test Suite (${{ matrix.os }})
    needs: quick-test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install LLVM (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y llvm-14 llvm-14-dev libclang-14-dev
      - name: Install LLVM (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install llvm@14
          echo "LLVM_SYS_140_PREFIX=$(brew --prefix llvm@14)" >> $GITHUB_ENV
      - name: Install LLVM (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install llvm --version=14.0.6
          echo "LLVM_SYS_140_PREFIX=C:\Program Files\LLVM" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Run all tests
        run: cargo test --all --all-features
      - name: Run integration tests
        run: cargo test --test '*' --all-features

  # Test individual crates
  crate-tests:
    name: Crate Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate: [seen_lexer, seen_parser, seen_typechecker, seen_interpreter, seen_ir, seen_cli]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install LLVM
        run: |
          sudo apt-get update
          sudo apt-get install -y llvm-14 llvm-14-dev libclang-14-dev
      - name: Test ${{ matrix.crate }}
        run: |
          cd ${{ matrix.crate }}
          cargo test --all-features

  # Property-based tests
  property-tests:
    name: Property Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Install LLVM
        run: |
          sudo apt-get update
          sudo apt-get install -y llvm-14 llvm-14-dev libclang-14-dev
      - name: Run property tests
        run: cargo test --all --features proptest
        env:
          PROPTEST_CASES: 1000

  # Bilingual tests
  bilingual-tests:
    name: Bilingual Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Install LLVM
        run: |
          sudo apt-get update
          sudo apt-get install -y llvm-14 llvm-14-dev libclang-14-dev
      - name: Test English keywords
        run: cargo test --all bilingual_english
      - name: Test Arabic keywords
        run: cargo test --all bilingual_arabic

  # Test report
  test-report:
    name: Test Report
    needs: [full-test, crate-tests, property-tests, bilingual-tests]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Summary
        run: |
          echo "## Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All test suites have completed." >> $GITHUB_STEP_SUMMARY