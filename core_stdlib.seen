// Core standard library for Seen language - Basic implementation

// Math utilities
func abs(x: Int) -> Int {
    if x < 0 {
        return -x;
    } else {
        return x;
    }
}

func max(a: Int, b: Int) -> Int {
    if a > b {
        return a;
    } else {
        return b;
    }
}

func min(a: Int, b: Int) -> Int {
    if a < b {
        return a;
    } else {
        return b;
    }
}

// Simple factorial function for testing recursion
func factorial(n: Int) -> Int {
    if n <= 1 {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}

// Range utility - sum numbers in range
func range_sum(start: Int, end: Int) -> Int {
    val total = 0;
    for i in start..end {
        val total = total + i;
    }
    return total;
}

// Array utility - find element in array
func array_contains(arr: Array[Int], value: Int) -> Bool {
    for element in arr {
        if element == value {
            return true;
        }
    }
    return false;
}

// Simple fizzbuzz implementation 
func fizzbuzz(n: Int) {
    for i in 1..n+1 {
        if i % 15 == 0 {
            println("FizzBuzz");
        } else if i % 3 == 0 {
            println("Fizz");
        } else if i % 5 == 0 {
            println("Buzz");
        } else {
            println(i);
        }
    }
}